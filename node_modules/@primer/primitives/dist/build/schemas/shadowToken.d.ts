import { z } from 'zod';
export declare const shadowValue: z.ZodObject<{
    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    inset: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strict>;
export declare const shadowToken: z.ZodObject<{
    $description: z.ZodOptional<z.ZodString>;
    $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
    $value: z.ZodUnion<readonly [z.ZodObject<{
        color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
        alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
        offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        inset: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>, z.ZodArray<z.ZodObject<{
        color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
        alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
        offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        inset: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>>, z.ZodString]>;
    $type: z.ZodLiteral<"string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "transition" | "dimension" | "duration" | "gradient" | "shadow" | "typography" | "cubicBezier" | "custom-viewportRange">;
    $extensions: z.ZodOptional<z.ZodObject<{
        'org.primer.figma': z.ZodObject<{
            collection: z.ZodOptional<z.ZodString>;
            modeOverride: z.ZodOptional<z.ZodString>;
            group: z.ZodOptional<z.ZodString>;
        }, z.core.$strict>;
        'org.primer.overrides': z.ZodOptional<z.ZodObject<{
            light: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'light-tritanopia': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'light-protanopia-deuteranopia': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'light-high-contrast': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            dark: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'dark-tritanopia': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'dark-protanopia-deuteranopia': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'dark-high-contrast': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
            'dark-dimmed': z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodObject<{
                $description: z.ZodOptional<z.ZodString>;
                $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
                $value: z.ZodUnion<readonly [z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>, z.ZodString, z.ZodArray<z.ZodObject<{
                    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
                    alpha: z.ZodUnion<readonly [z.ZodAny, z.ZodString]>;
                    offsetX: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    offsetY: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    blur: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    spread: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
                    inset: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strict>>]>;
            }, z.core.$strict>]>>;
        }, z.core.$strict>>;
    }, z.core.$strip>>;
}, z.core.$strict>;

import { z } from 'zod';
export declare const typographyValue: z.ZodObject<{
    fontSize: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    lineHeight: z.ZodOptional<z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>>;
    fontWeight: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
    fontFamily: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
}, z.core.$strip>;
export declare const typographyToken: z.ZodObject<{
    $description: z.ZodOptional<z.ZodString>;
    $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
    $value: z.ZodUnion<readonly [z.ZodObject<{
        fontSize: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
        lineHeight: z.ZodOptional<z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>>;
        fontWeight: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
        fontFamily: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
    }, z.core.$strip>, z.ZodString]>;
    $type: z.ZodLiteral<"string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "transition" | "dimension" | "duration" | "gradient" | "shadow" | "typography" | "cubicBezier" | "custom-viewportRange">;
}, z.core.$strict>;

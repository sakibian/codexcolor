import { z } from 'zod';
export declare const borderValue: z.ZodObject<{
    color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
    style: z.ZodEnum<{
        inset: "inset";
        solid: "solid";
        dashed: "dashed";
        dotted: "dotted";
        double: "double";
        groove: "groove";
        ridge: "ridge";
        outset: "outset";
    }>;
    width: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
}, z.core.$strip>;
export declare const borderToken: z.ZodObject<{
    $description: z.ZodOptional<z.ZodString>;
    $deprecated: z.ZodOptional<z.ZodUnion<readonly [z.ZodString, z.ZodBoolean]>>;
    $value: z.ZodUnion<readonly [z.ZodObject<{
        color: z.ZodUnion<readonly [z.ZodString, z.ZodString]>;
        style: z.ZodEnum<{
            inset: "inset";
            solid: "solid";
            dashed: "dashed";
            dotted: "dotted";
            double: "double";
            groove: "groove";
            ridge: "ridge";
            outset: "outset";
        }>;
        width: z.ZodUnion<readonly [z.ZodUnion<readonly [z.ZodString, z.ZodLiteral<"0">, z.ZodLiteral<0>]>, z.ZodString]>;
    }, z.core.$strip>, z.ZodString]>;
    $type: z.ZodLiteral<"string" | "number" | "border" | "color" | "fontFamily" | "fontWeight" | "transition" | "dimension" | "duration" | "gradient" | "shadow" | "typography" | "cubicBezier" | "custom-viewportRange">;
}, z.core.$strict>;
